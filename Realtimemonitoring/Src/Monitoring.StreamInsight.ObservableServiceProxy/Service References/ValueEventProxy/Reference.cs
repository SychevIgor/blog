//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sychev.Monitoring.StreamInsight.ObservableServiceProxy.ValueEventProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonValueEvent", Namespace="http://schemas.datacontract.org/2004/07/Sychev.Monitoring.StreamInsightServer.Mod" +
        "els")]
    [System.SerializableAttribute()]
    public partial class NonValueEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackEventTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackEventType {
            get {
                return this.TrackEventTypeField;
            }
            set {
                if ((this.TrackEventTypeField.Equals(value) != true)) {
                    this.TrackEventTypeField = value;
                    this.RaisePropertyChanged("TrackEventType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ValueEventProxy.IWCFDataSourceOf_NonValueEvent")]
    public interface IWCFDataSourceOf_NonValueEvent {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWCFDataSourceOf_NonValueEvent/PushEvent")]
        void PushEvent(Sychev.Monitoring.StreamInsight.ObservableServiceProxy.ValueEventProxy.NonValueEvent value);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWCFDataSourceOf_NonValueEvent/PushEvent")]
        System.Threading.Tasks.Task PushEventAsync(Sychev.Monitoring.StreamInsight.ObservableServiceProxy.ValueEventProxy.NonValueEvent value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFDataSourceOf_NonValueEventChannel : Sychev.Monitoring.StreamInsight.ObservableServiceProxy.ValueEventProxy.IWCFDataSourceOf_NonValueEvent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFDataSourceOf_NonValueEventClient : System.ServiceModel.ClientBase<Sychev.Monitoring.StreamInsight.ObservableServiceProxy.ValueEventProxy.IWCFDataSourceOf_NonValueEvent>, Sychev.Monitoring.StreamInsight.ObservableServiceProxy.ValueEventProxy.IWCFDataSourceOf_NonValueEvent {
        
        public WCFDataSourceOf_NonValueEventClient() {
        }
        
        public WCFDataSourceOf_NonValueEventClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFDataSourceOf_NonValueEventClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFDataSourceOf_NonValueEventClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFDataSourceOf_NonValueEventClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PushEvent(Sychev.Monitoring.StreamInsight.ObservableServiceProxy.ValueEventProxy.NonValueEvent value) {
            base.Channel.PushEvent(value);
        }
        
        public System.Threading.Tasks.Task PushEventAsync(Sychev.Monitoring.StreamInsight.ObservableServiceProxy.ValueEventProxy.NonValueEvent value) {
            return base.Channel.PushEventAsync(value);
        }
    }
}
